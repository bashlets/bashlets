#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-8 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


source bashlets core::github::api
source bashlets core::github::page

# Get an organization company.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::company()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .company
}

# Get an organization description.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::describe()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .description
}

# Get an organization email.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::email()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .email
}

# Get an organization.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::get()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .
}

# Get an organization location.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::location()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .location
}

# Get an organization name.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::name()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .name
}

# List public repositories for the specified user.
#
# @cf   https://developer.github.com/v3/repos/#list-organization-repositories
# @public
function bashlets::core::github::org::repos()
{
    local org="${1:-bashlets}"
    local type="${2:-all}"  # all/public/private/forks/sources/member
    local limit="${3:-100}" callback="${4:-cat}"

    local url="/orgs/$org/repos?type=$type"

    $BASHLETS_NAMESPACE page items "$url" name "$limit" "$callback"
}

# Get an organization url.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::url()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .url
}

# Get an organization url.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::url()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .url
}

# Get an organization url.
#
# @cf   https://developer.github.com/v3/orgs/#get-an-organization
# @public
function bashlets::core::github::org::url()
{
    local org="${1:?Organization login needed}"

    local url="/orgs/$org"

    $BASHLETS_NAMESPACE api get "$url" .url
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
