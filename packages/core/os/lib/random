#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-8 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


BASHLETS_RANDOM_SOURCE="${BASHLETS_RANDOM_SOURCE:-/dev/urandom}"


#@descr generate a random stream of length $SIZE, including only character in $FILTER
#@public
function bashlets::core::os::random::get()
{
    local size="${1:-16}"
    local filter="${2:-}"
    local blk_count blk_size i

    # let's try to overcome a limitation on the block size in dd
    blk_count="$((size/4096))"

    i=0
    while ((i <= blk_count && size > 0))
    do
        ((size > 4096)) && blk_size=4096 || blk_size="$size"
        if [[ -n $filter ]]
        then
            <"$BASHLETS_RANDOM_SOURCE" tr -cd "$filter" | dd bs="$blk_size" count=1 2>/dev/null
        else
            dd if="$BASHLETS_RANDOM_SOURCE" bs="$blk_size" count=1 2>/dev/null
        fi

        size="$((size-4096))"
        ((i--))
    done
}

#@public
function bashlets::core::os::random::get_uuid()
{
    # read from the /proc filesystem, if applicable
    cat /proc/sys/kernel/random/uuid 2>/dev/null
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
