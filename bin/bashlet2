#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# bashlets -- A modular extensible toolbox for Bash
#
# Library bootstrapping and main entry point / second stage
#
# Copyright (c) 2014-6 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################



BASHLETS_NAMESPACE=bash$$
BASHLETS_NAMESPACE_QUOTED=bash\$\$


function bashlet_import_lazy()
{
    local bashlet="$1" file

    type bashlets_library_loader_import > /dev/null 2> /dev/null || {
        [[ $bashlet != "library/loader" ]] && 
            bashlet_import_lazy library/loader
    }

    file="$BASHLETS_BASE/${BASHLETS_REV:-DEFAULT}/lib/$bashlet"
    source "$file"
}

function bashlet_import()
{
    local bashlet="$1"

    bashlet_import_lazy $bashlet || return 1
    bashlets_library_loader_import $bashlet || return 1
}

function bashlet_trace_enable()
{
    # cf. http://www.vctlabs.com/posts/2011/Nov/26/tracing_cheatsheet/
    export BASHLETS_OLD_PS4="$PS4"
    export PS4='+(${BASH_SOURCE[0]}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -x
}

function bashlet_trace_disable()
{
    # cf. http://stackoverflow.com/questions/3601515/
    set +x
    [ -z ${BASHLETS_OLD_PS4+x} ] || export PS4="$BASHLETS_OLD_PS4"
}

function bashlet_are_we_sourced()
{
    [[ "${BASH_SOURCE[0]}" != "${0}" ]]
}


# check if the script is being sourced 
bashlet_are_we_sourced || {
    echo "[bashlets:FATAL] Must be sourced!" >&2
    exit 1
}

# ``parse'' command line
[[ $# != 1 ]] && {
    echo "[bashlets:FATAL] Loader usage: bashlet <BASHLET>" >&2
    return 1
}

# library entry point
bashlet_import "$1" || {
    echo "[bashlets:FATAL] Generic loader error." >&2
    return 1
}


# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
